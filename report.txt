sep23 - sep28
crop bounding-box containing car image in 200G vehicle dataset. [done]
residual net with 50 layers classifying one image need about 500 ms in caffe.
residual net with 34 layers classifying one image need about 150 ms in torch.

sep29 - oct11
nist tattoo detection experiment
    using resnet-18
    100 percent accuracy predicted by choosing best model after cross validation.
    after 90 epoc, 1 false prediction among 2349 images.

attend ali guangzhou airport wifi prediction contest
    season 1 date is from sep 28 to oct 23


oct12 - oct18
nist, flickr tattoo detection experiment
    resnet-18, flickr2349, epcho=20, LR=0.006, momentum=0.9, weightDecay=1e-4, 5-fold test error rate=7.535%
    resnet-18, flickr2349, epcho=30, LR=0.0001, momentum=0.9, weightDecay=1e-4, 5-fold test error rate=6.599%
    resnet-34, flickr2349, epcho=40, LR=0.0001, momentum=0.9, weightDecay=1e-4, 5-fold test error rate=5.705%
    resnet-34, flickr2349, epcho=40, LR=0.00006, momentum=0.9, weightDecay=1e-4, 5-fold test error rate=5.875%

    resnet-18, flickr10000, epcho=20, LR=0.006, momentum=0.9, weightDecay=1e-4, 5-fold test error rate=5.34%
    resnet-18, flickr10000, epcho=30, LR=0.0001, momentum=0.9, weightDecay=1e-4, 5-fold test error rate=5.03%
    resnet-34, flickr10000, epcho=40, LR=0.0001, momentum=0.9, weightDecay=1e-4, 5-fold test error rate=3.77%
    resnet-34, flickr10000, epcho=40, LR=0.00006, momentum=0.9, weightDecay=1e-4, 5-fold test error rate=3.98%
    resnet-50, flickr10000, epcho=40, LR=0.0001, momentum=0.9, weightDecay=1e-4, 1-fold test error rate=3%
    resnet-101, flickr10000, epcho=40, LR=0.0001, momentum=0.9, weightDecay=1e-4, 1-fold test error rate=3.05%

    resnet-18, nist, epcho=20, LR=0.006, momentum=0.9, weightDecay=1e-4, 5-fold test error rate=0.1704%
    resnet-18, nist, epcho=30, LR=0.0001, momentum=0.9, weightDecay=1e-4, 5-fold test error rate=0.0852%
    resnet-34, nist, epcho=40, LR=0.0001, momentum=0.9, weightDecay=1e-4, 5-fold test error rate=0.0426%
    resnet-34, nist, epcho=40, LR=0.00006, momentum=0.9, weightDecay=1e-4, 5-fold test error rate=0.0852%

    resnet-34, nist-flickr, epcho=30, LR=0.0001, momentum=0.9, weightDecay=1e-4, 5-fold test error rate=28.9052%

    resnet-34, flickr-nist, epcho=40, LR=0.0001, momentum=0.9, weightDecay=1e-4, 5-fold test error rate=2.214%



oct18 - oct25
    resnet-152, flickr10000, epcho=40, LR=0.0001, momentum=0.9, weightDecay=1e-4, 1-fold test error rate=2.9%

    resnet-200, flickr10000, epcho=38, LR=0.0001, momentum=0.9, weightDecay=1e-4, 1-fold test error rate=2.6%

    TattDL tested flickr10000 fold1, detected 530 tattoo in 1148 tattoo images,
    detected 9 tattoo in 852 non-tattoo images.
    false negative rate is (1148-530)/1148 = 53.833%
    false positive rate is 9/852 = 1.0563%

    download tattoo segmentation dataset zagreb with 890 images

    wrote a cleaning py script to clean checkpoint folder in fb.resnet.torch 

    use edgebox to generate bounding box for tattoo image   [to do]

    proposal: pre-train with flickr, fine-tune with bounding box [to do]

oct26 -
    fine-tuned a faster r-cnn detector 120 thousand iterators with 80% zagreb dataset
        20% dataset tested gain AP is 0.5541
        precision-recall curve is tattPR-Curve.png

    Because tattDL resize the max edge of input image to 500, it's inconvenient to calculate AP and PR curve [refused]

    there are two plan to get tattoo feature map 
        first: split a image into two 224x224 image, and combine their feature map
        second: write a roi-pooling layer to crop with different size image and gain same size feature map
            [failed] because the sizes of input images are differe, they cannot be combined to one batch
        third (easiest one): remove model's fc layer, just give a random size image to the model, and get the feature map 





